# Playbook which ramps up myapp tutorial site inside a Vagrant virtual machine

- hosts: all
  gather_facts: true

  # These need to be set up before reading default.yml - more variables are generated based on these
  vars:
    - package_name: my.app
    - package_path: my/app
    - site_id: myapp_production
    - site_mode: production
    - mandrill: on
    - ssl: off
    - cloudflare: off
    - new_relic: off
    - websocket: on
    - notify_email: mikko@example.com
    - git_repository: git@github.com:websauna/myapp.git
    - git_branch: master
    - certificate_file: tests/snakeoil.pem
    - key_file: tests/snakeoil.pem
    - ini_secrets_file: tests/test-secrets.ini
    - www_ip: 0.0.0.0

    # This is were we forward Websocket
    - ini_extra_settings: |
        pyramid_notebook.alternative_domain = http://localhost:1080

        websauna.superusers =
          mikko@example.com

  pre_tasks:

    # Load default vars based on playbook.yml input
    - include_vars: default.yml

    # Load variables from the vault
    - include_vars: secrets.yml

    # local-configure.yml is generated by a test runner
    - name: Include vars from local-configure.yml if found
      include_vars: "{{ item }}"
      with_first_found:
       - local-configure.yml
       - null.yml

  roles:
  - websauna.preflight
  - websauna.users
  - websauna.ssh
  - websauna.shell
  - websauna.harden
  - websauna.postfix
  - websauna.mandrill
  # These third party roles may assume you always run as root
  - { role: ANXS.perl, become: yes, become_user: root }  # Needed for logwatch
  - { role: ANXS.cron, become: yes, become_user: root }  # Needed for logwatch
  - { role: ANXS.postgresql, become: yes, become_user: root }
  - { role: ANXS.logwatch, become: yes, become_user: root }
  - { role: Stouts.nginx, become: yes, become_user: root }
  - { role: Stouts.redis, become: yes, become_user: root }
  - { role: Stouts.python, become: yes, become_user: root }
  - { role: websauna.site, tags: ['site-update'] }
  - websauna.postflight



