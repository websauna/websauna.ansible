{% if ssl %}
server {
    listen {{www_ip}}:80;
    server_name {{server_name}};

    # open a location for letsencrypt renewal
    # from https://community.letsencrypt.org/t/404-on-well-known-acme-challenge/15565/10
    location ~ /.well-known {
        allow all;
        root /var/www/html;
    }

    # Redirect all remaining HTTP traffic to HTTPS
    location / {
        rewrite ^/(.*) https://{{server_name}}/$1 permanent;
    }
}
{% endif %}

{% if websocket %}
# Websocket support
# include a variable for the upgrade header
map $http_upgrade $connection_upgrade {
    default   upgrade;
    ''        close;
}
{% endif %}

# Serve HTTP/HTTPS traffic
server {

    {% if ssl %}
        listen {{www_ip}}:443;
    {% else %}
        listen {{www_ip}}:80;
    {% endif %}

    server_name {{server_name}};

    {% if cloudflare and websocket %}
        server_name ws.{{server_name}};
    {% endif %}

    {% if cloudflare %}

        set_real_ip_from   199.27.128.0/21;
        set_real_ip_from   173.245.48.0/20;
        set_real_ip_from   103.21.244.0/22;
        set_real_ip_from   103.22.200.0/22;
        set_real_ip_from   103.31.4.0/22;
        set_real_ip_from   141.101.64.0/18;
        set_real_ip_from   108.162.192.0/18;
        set_real_ip_from   190.93.240.0/20;
        set_real_ip_from   188.114.96.0/20;
        set_real_ip_from   197.234.240.0/22;
        set_real_ip_from   198.41.128.0/17;
        set_real_ip_from   162.158.0.0/15;
        set_real_ip_from   104.16.0.0/12;
        set_real_ip_from   172.64.0.0/13;
        set_real_ip_from   2400:cb00::/32;
        set_real_ip_from   2606:4700::/32;
        set_real_ip_from   2803:f800::/32;
        set_real_ip_from   2405:b500::/32;
        set_real_ip_from   2405:8100::/32;
        real_ip_header     CF-Connecting-IP;

    {% endif %}


    {% if ssl %}
        ssl on;
        ssl_certificate {{nginx_ssl_certificate_path}};
        ssl_certificate_key {{nginx_ssl_certificate_path_key}};

        # https://wiki.mozilla.org/Security/Server_Side_TLS
        # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
        # ssl_dhparam /path/to/dhparam.pem;
        ssl_session_timeout 5m;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES2Î©56-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:50m;
    {% endif %}

    client_max_body_size 99m;

    access_log {{nginx_access_log}};
    error_log {{nginx_error_log}};
    root /var/www;

    # Expose Nginx status for monitoring applications
    location /nginx_stub_status {
      stub_status on;
      allow 127.0.0.1;
      deny all;
    }    

    # Finally, send all non-media requests to the Django server.
    location / {
        include uwsgi_params;

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto $scheme;

        {% if websocket %}
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        {% endif %}

        uwsgi_pass 127.0.0.1:8001;
        {% if ssl %}
            uwsgi_param UWSGI_SCHEME https;
        {% endif %}
        uwsgi_pass_header X_FORWARDED_PROTO;
        uwsgi_pass_header X_REAL_IP;

        {% if htpasswd_password|default(False) %}
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/protected.htpasswd;
        {% endif %}
    }

}
